name: Lint and Prettier

on:
  push:
    branches:
      - "**"
    paths:
      - "**"
  pull_request:
    branches:
      - "**"
    paths:
      - "**"

jobs:
  run-lint-prettier:
    name: Run lint and prettier
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20.10.0

      # ESLint and Prettier must be in `package.json`
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Node.js dependencies
        env:
          CYPRESS_INSTALL_BINARY: 0 # This disables Cypress binary installation during pnpm install
        run: pnpm i

      - name: Building packages
        env:
          DISABLE_SENTRY: true
        run: pnpm run build
      - name: Running linter
        run: pnpm run lint

      - name: Running Prettier check
        run: pnpm run format-check
